"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Mailer = void 0;
const nodemailer_1 = require("nodemailer");
require("dotenv/config");
const utils_1 = require("./utils");
class Mailer {
    constructor(smtpConfig) {
        this.sendMail = (mailOptions) => __awaiter(this, void 0, void 0, function* () {
            const result = yield this.transporter.sendMail(mailOptions);
            return result;
        });
        if (smtpConfig) {
            this.transporter = (0, nodemailer_1.createTransport)(smtpConfig);
        }
        else {
            this._checkEnv(utils_1.envVariablesRequired);
            this.transporter = (0, nodemailer_1.createTransport)(this._getOptions());
        }
    }
    _checkEnv(variables) {
        var missing = [];
        console.log("process.env:", process.env);
        variables.forEach(function (variable) {
            if (!process.env[variable]) {
                missing.push(variable);
            }
        });
        if (missing.length) {
            if (missing.length === 1) {
                throw new Error('Missing environment variable ' + missing[0]);
            }
            throw new Error('Missing environment variables ' + missing.join(', '));
        }
    }
    _getOptions() {
        return {
            name: process.env.SMTP_NAME,
            host: process.env.SMTP_HOST,
            port: +process.env.SMTP_PORT,
            secure: process.env.SMTP_SECURE == 'true' ? true : false,
            auth: (0, utils_1.getAuth)(),
            tls: (0, utils_1.getTls)()
        };
    }
}
exports.Mailer = Mailer;
//# sourceMappingURL=index.js.map